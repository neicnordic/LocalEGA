--
-- PostgreSQL database cluster dump
--

SET default_transaction_read_only = off;

SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;

--
-- Drop databases (except postgres and template1)
--

DROP DATABASE lega;




--
-- Drop roles
--

DROP ROLE lega_in;
DROP ROLE lega_out;
DROP ROLE postgres;


--
-- Roles
--

CREATE ROLE lega_in;
ALTER ROLE lega_in WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS PASSWORD 'SCRAM-SHA-256$4096:yK8BCD+z4pcj82g5qPDwdQ==$ueIjolaGhrGujXfsY7RjXTiE4FwdPICjKQRDFPxyiE8=:QmKEu+/KnyNm6r+9QDGMXyfeN3f8bsA4594IOWJfuQg=';
CREATE ROLE lega_out;
ALTER ROLE lega_out WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS PASSWORD 'SCRAM-SHA-256$4096:Offvv/EPJf82NII0PexGag==$t7djSSJTwqDliVta9rG2GJwT3XmFn8Kpwd0j4fUiUeI=:l+jw+RtyYnNHy1V2KGS8F2zYMyJFnK0OOdt0qX1Imo8=';
CREATE ROLE postgres;
ALTER ROLE postgres WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS;






--
-- PostgreSQL database dump
--

-- Dumped from database version 11.2
-- Dumped by pg_dump version 11.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

UPDATE pg_catalog.pg_database SET datistemplate = false WHERE datname = 'template1';
DROP DATABASE template1;
--
-- Name: template1; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE template1 WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'en_US.utf8' LC_CTYPE = 'en_US.utf8';


ALTER DATABASE template1 OWNER TO postgres;

\connect template1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: DATABASE template1; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE template1 IS 'default template for new databases';


--
-- Name: template1; Type: DATABASE PROPERTIES; Schema: -; Owner: postgres
--

ALTER DATABASE template1 IS_TEMPLATE = true;


\connect template1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: DATABASE template1; Type: ACL; Schema: -; Owner: postgres
--

REVOKE CONNECT,TEMPORARY ON DATABASE template1 FROM PUBLIC;
GRANT CONNECT ON DATABASE template1 TO PUBLIC;


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

-- Dumped from database version 11.2
-- Dumped by pg_dump version 11.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: lega; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE lega WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'en_US.utf8' LC_CTYPE = 'en_US.utf8';


ALTER DATABASE lega OWNER TO postgres;

\connect lega

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: local_ega; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA local_ega;


ALTER SCHEMA local_ega OWNER TO postgres;

--
-- Name: local_ega_download; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA local_ega_download;


ALTER SCHEMA local_ega_download OWNER TO postgres;

--
-- Name: local_ega_ebi; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA local_ega_ebi;


ALTER SCHEMA local_ega_ebi OWNER TO postgres;

--
-- Name: checksum_algorithm; Type: TYPE; Schema: local_ega; Owner: postgres
--

CREATE TYPE local_ega.checksum_algorithm AS ENUM (
    'MD5',
    'SHA256',
    'SHA384',
    'SHA512'
);


ALTER TYPE local_ega.checksum_algorithm OWNER TO postgres;

--
-- Name: storage; Type: TYPE; Schema: local_ega; Owner: postgres
--

CREATE TYPE local_ega.storage AS ENUM (
    'S3',
    'POSIX'
);


ALTER TYPE local_ega.storage OWNER TO postgres;

--
-- Name: request_type; Type: TYPE; Schema: local_ega_download; Owner: postgres
--

CREATE TYPE local_ega_download.request_type AS (
	req_id integer,
	header text,
	archive_path text,
	archive_type local_ega.storage,
	file_size integer,
	archive_file_checksum character varying,
	archive_file_checksum_type local_ega.checksum_algorithm
);


ALTER TYPE local_ega_download.request_type OWNER TO postgres;

--
-- Name: check_session_keys_checksums_sha256(text[]); Type: FUNCTION; Schema: local_ega; Owner: postgres
--

CREATE FUNCTION local_ega.check_session_keys_checksums_sha256(checksums text[]) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
    #variable_conflict use_column
    BEGIN
	RETURN EXISTS(SELECT 1
                      FROM local_ega.session_key_checksums_sha256 sk 
	              INNER JOIN local_ega.files f
		      ON f.id = sk.file_id 
		      WHERE (f.status <> 'ERROR' AND f.status <> 'DISABLED') AND -- no data-race on those values
		      	    sk.session_key_checksum = ANY(checksums));
    END;
$$;


ALTER FUNCTION local_ega.check_session_keys_checksums_sha256(checksums text[]) OWNER TO postgres;

--
-- Name: finalize_file(text, text, character varying, character varying, text); Type: FUNCTION; Schema: local_ega; Owner: postgres
--

CREATE FUNCTION local_ega.finalize_file(inpath text, eid text, checksum character varying, checksum_type character varying, sid text) RETURNS void
    LANGUAGE plpgsql
    AS $$
    #variable_conflict use_column
    BEGIN
	-- -- Check if in proper state
	-- IF EXISTS(SELECT id
	--    	  FROM local_ega.main
	-- 	  WHERE archive_file_checksum = checksum AND
	-- 	  	archive_file_checksum_type = upper(checksum_type)::local_ega.checksum_algorithm AND
	-- 		elixir_id = eid AND
	-- 		inbox_path = inpath AND
	-- 		status <> 'COMPLETED')
	-- THEN
	--    RAISE EXCEPTION 'Archive file not in completed state for stable_id: % ', sid;
	-- END IF;
	-- Go ahead and mark _them_ done
	UPDATE local_ega.files
	SET status = 'READY',
	    stable_id = sid
	WHERE archive_file_checksum = checksum AND
	      archive_file_checksum_type = upper(checksum_type)::local_ega.checksum_algorithm AND
	      elixir_id = eid AND
	      inbox_path = inpath AND
	      status = 'COMPLETED';
    END;
$$;


ALTER FUNCTION local_ega.finalize_file(inpath text, eid text, checksum character varying, checksum_type character varying, sid text) OWNER TO postgres;

--
-- Name: insert_error(integer, text, text, text, boolean); Type: FUNCTION; Schema: local_ega; Owner: postgres
--

CREATE FUNCTION local_ega.insert_error(fid integer, h text, etype text, msg text, from_user boolean) RETURNS void
    LANGUAGE plpgsql
    AS $$
    BEGIN
       INSERT INTO local_ega.errors (file_id,hostname,error_type,msg,from_user) VALUES(fid,h,etype,msg,from_user);
       UPDATE local_ega.files SET status = 'ERROR' WHERE id = fid;
    END;
$$;


ALTER FUNCTION local_ega.insert_error(fid integer, h text, etype text, msg text, from_user boolean) OWNER TO postgres;

--
-- Name: insert_file(text, text); Type: FUNCTION; Schema: local_ega; Owner: postgres
--

CREATE FUNCTION local_ega.insert_file(inpath text, eid text) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
    #variable_conflict use_column
    DECLARE
        file_id  local_ega.main.id%TYPE;
        file_ext local_ega.main.submission_file_extension%TYPE;
    BEGIN
        -- Make a new insertion
        file_ext := substring(inpath from '\.([^\.]*)$'); -- extract extension from filename
	INSERT INTO local_ega.main (submission_file_path,
	  	                    submission_user,
			   	    submission_file_extension,
			  	    status,
			  	    encryption_method) -- hard-code the archive_encryption
	VALUES(inpath,eid,file_ext,'INIT','CRYPT4GH') RETURNING local_ega.main.id
	INTO file_id;
	RETURN file_id;
    END;
$_$;


ALTER FUNCTION local_ega.insert_file(inpath text, eid text) OWNER TO postgres;

--
-- Name: is_disabled(integer); Type: FUNCTION; Schema: local_ega; Owner: postgres
--

CREATE FUNCTION local_ega.is_disabled(fid integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
#variable_conflict use_column
BEGIN
   RETURN EXISTS(SELECT 1 FROM local_ega.files WHERE id = fid AND status = 'DISABLED');
END;
$$;


ALTER FUNCTION local_ega.is_disabled(fid integer) OWNER TO postgres;

--
-- Name: main_updated(); Type: FUNCTION; Schema: local_ega; Owner: postgres
--

CREATE FUNCTION local_ega.main_updated() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
     NEW.last_modified = clock_timestamp();
		 RETURN NEW;
END;
$$;


ALTER FUNCTION local_ega.main_updated() OWNER TO postgres;

--
-- Name: mark_ready(); Type: FUNCTION; Schema: local_ega; Owner: postgres
--

CREATE FUNCTION local_ega.mark_ready() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
     UPDATE local_ega.main_errors SET active = FALSE WHERE file_id = NEW.id;  -- or OLD.id
     RETURN NEW;
END;
$$;


ALTER FUNCTION local_ega.mark_ready() OWNER TO postgres;

--
-- Name: download_complete(integer, bigint, double precision); Type: FUNCTION; Schema: local_ega_download; Owner: postgres
--

CREATE FUNCTION local_ega_download.download_complete(rid integer, dlsize bigint, s double precision) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
     INSERT INTO local_ega_download.success(req_id,bytes,speed)
     VALUES(rid,dlsize,s);
END;
$$;


ALTER FUNCTION local_ega_download.download_complete(rid integer, dlsize bigint, s double precision) OWNER TO postgres;

--
-- Name: insert_error(integer, text, text, text); Type: FUNCTION; Schema: local_ega_download; Owner: postgres
--

CREATE FUNCTION local_ega_download.insert_error(rid integer, h text, etype text, msg text) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
     INSERT INTO local_ega_download.errors (req_id,hostname,code,description)
     VALUES (rid, h, etype, msg);
END;
$$;


ALTER FUNCTION local_ega_download.insert_error(rid integer, h text, etype text, msg text) OWNER TO postgres;

--
-- Name: make_request(text, text, text, bigint, bigint); Type: FUNCTION; Schema: local_ega_download; Owner: postgres
--

CREATE FUNCTION local_ega_download.make_request(sid text, uinfo text, cip text, scoord bigint DEFAULT 0, ecoord bigint DEFAULT NULL::bigint) RETURNS local_ega_download.request_type
    LANGUAGE plpgsql
    AS $$
#variable_conflict use_column
DECLARE
     req  local_ega_download.request_type;
     archive_rec local_ega.archive_files%ROWTYPE;
     rid  INTEGER;
BEGIN

     -- Find the file
     SELECT * INTO archive_rec FROM local_ega.archive_files WHERE stable_id = sid LIMIT 1;

     IF archive_rec IS NULL THEN
     	RAISE EXCEPTION 'archived file not found for stable_id: % ', sid;
     END IF;

     -- New entry, or reuse old entry
     INSERT INTO local_ega_download.requests (file_id, user_info, client_ip, start_coordinate, end_coordinate)
     VALUES (archive_rec.file_id, uinfo, cip, scoord, ecoord)
     ON CONFLICT (id) DO NOTHING
     RETURNING local_ega_download.requests.id INTO rid;
     
     -- result
     req.req_id                    := rid;
     req.header                    := archive_rec.header;
     req.archive_path              := archive_rec.archive_path;
     req.archive_type              := archive_rec.archive_type;
     req.file_size                 := archive_rec.archive_filesize;
     req.archive_file_checksum      := archive_rec.archive_file_checksum;
     req.archive_file_checksum_type := archive_rec.archive_file_checksum_type;
     RETURN req;
END;
$$;


ALTER FUNCTION local_ega_download.make_request(sid text, uinfo text, cip text, scoord bigint, ecoord bigint) OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: archive_encryption; Type: TABLE; Schema: local_ega; Owner: postgres
--

CREATE TABLE local_ega.archive_encryption (
    mode character varying(16) NOT NULL,
    description text
);


ALTER TABLE local_ega.archive_encryption OWNER TO postgres;

--
-- Name: main; Type: TABLE; Schema: local_ega; Owner: postgres
--

CREATE TABLE local_ega.main (
    id integer NOT NULL,
    stable_id text,
    status character varying NOT NULL,
    submission_file_path text NOT NULL,
    submission_file_extension character varying(260) NOT NULL,
    submission_file_calculated_checksum character varying(128),
    submission_file_calculated_checksum_type local_ega.checksum_algorithm,
    submission_file_size bigint,
    submission_user text NOT NULL,
    archive_file_reference text,
    archive_file_type local_ega.storage,
    archive_file_size bigint,
    archive_file_checksum character varying(128),
    archive_file_checksum_type local_ega.checksum_algorithm,
    encryption_method character varying,
    version integer,
    header text,
    created_by name DEFAULT CURRENT_USER,
    last_modified_by name DEFAULT CURRENT_USER,
    created_at timestamp with time zone DEFAULT clock_timestamp() NOT NULL,
    last_modified timestamp with time zone DEFAULT clock_timestamp() NOT NULL
);


ALTER TABLE local_ega.main OWNER TO postgres;

--
-- Name: archive_files; Type: VIEW; Schema: local_ega; Owner: postgres
--

CREATE VIEW local_ega.archive_files AS
 SELECT main.id AS file_id,
    main.stable_id,
    main.archive_file_reference AS archive_path,
    main.archive_file_type AS archive_type,
    main.archive_file_size AS archive_filesize,
    main.archive_file_checksum,
    main.archive_file_checksum_type,
    main.header,
    main.version
   FROM local_ega.main
  WHERE ((main.status)::text = 'READY'::text);


ALTER TABLE local_ega.archive_files OWNER TO postgres;

--
-- Name: dbschema_version; Type: TABLE; Schema: local_ega; Owner: postgres
--

CREATE TABLE local_ega.dbschema_version (
    version integer NOT NULL,
    applied timestamp with time zone,
    description character varying(1024)
);


ALTER TABLE local_ega.dbschema_version OWNER TO postgres;

--
-- Name: main_errors; Type: TABLE; Schema: local_ega; Owner: postgres
--

CREATE TABLE local_ega.main_errors (
    id integer NOT NULL,
    active boolean DEFAULT true NOT NULL,
    file_id integer NOT NULL,
    hostname text,
    error_type text NOT NULL,
    msg text NOT NULL,
    from_user boolean DEFAULT false,
    occured_at timestamp with time zone DEFAULT clock_timestamp() NOT NULL
);


ALTER TABLE local_ega.main_errors OWNER TO postgres;

--
-- Name: errors; Type: VIEW; Schema: local_ega; Owner: postgres
--

CREATE VIEW local_ega.errors AS
 SELECT main_errors.id,
    main_errors.file_id,
    main_errors.hostname,
    main_errors.error_type,
    main_errors.msg,
    main_errors.from_user,
    main_errors.occured_at
   FROM local_ega.main_errors
  WHERE (main_errors.active = true);


ALTER TABLE local_ega.errors OWNER TO postgres;

--
-- Name: files; Type: VIEW; Schema: local_ega; Owner: postgres
--

CREATE VIEW local_ega.files AS
 SELECT main.id,
    main.submission_user AS elixir_id,
    main.submission_file_path AS inbox_path,
    main.submission_file_size AS inbox_filesize,
    main.submission_file_calculated_checksum AS inbox_file_checksum,
    main.submission_file_calculated_checksum_type AS inbox_file_checksum_type,
    main.status,
    main.archive_file_reference AS archive_path,
    main.archive_file_type AS archive_type,
    main.archive_file_size AS archive_filesize,
    main.archive_file_checksum,
    main.archive_file_checksum_type,
    main.stable_id,
    main.header,
    main.version,
    main.created_at,
    main.last_modified
   FROM local_ega.main;


ALTER TABLE local_ega.files OWNER TO postgres;

--
-- Name: main_errors_id_seq; Type: SEQUENCE; Schema: local_ega; Owner: postgres
--

CREATE SEQUENCE local_ega.main_errors_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE local_ega.main_errors_id_seq OWNER TO postgres;

--
-- Name: main_errors_id_seq; Type: SEQUENCE OWNED BY; Schema: local_ega; Owner: postgres
--

ALTER SEQUENCE local_ega.main_errors_id_seq OWNED BY local_ega.main_errors.id;


--
-- Name: main_id_seq; Type: SEQUENCE; Schema: local_ega; Owner: postgres
--

CREATE SEQUENCE local_ega.main_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE local_ega.main_id_seq OWNER TO postgres;

--
-- Name: main_id_seq; Type: SEQUENCE OWNED BY; Schema: local_ega; Owner: postgres
--

ALTER SEQUENCE local_ega.main_id_seq OWNED BY local_ega.main.id;


--
-- Name: session_key_checksums_sha256; Type: TABLE; Schema: local_ega; Owner: postgres
--

CREATE TABLE local_ega.session_key_checksums_sha256 (
    session_key_checksum character varying(128) NOT NULL,
    session_key_checksum_type local_ega.checksum_algorithm,
    file_id integer NOT NULL
);


ALTER TABLE local_ega.session_key_checksums_sha256 OWNER TO postgres;

--
-- Name: status; Type: TABLE; Schema: local_ega; Owner: postgres
--

CREATE TABLE local_ega.status (
    id integer NOT NULL,
    code character varying(16) NOT NULL,
    description text
);


ALTER TABLE local_ega.status OWNER TO postgres;

--
-- Name: errors; Type: TABLE; Schema: local_ega_download; Owner: postgres
--

CREATE TABLE local_ega_download.errors (
    id integer NOT NULL,
    req_id integer NOT NULL,
    code text NOT NULL,
    description text NOT NULL,
    hostname text,
    occured_at timestamp with time zone DEFAULT clock_timestamp() NOT NULL
);


ALTER TABLE local_ega_download.errors OWNER TO postgres;

--
-- Name: errors_id_seq; Type: SEQUENCE; Schema: local_ega_download; Owner: postgres
--

CREATE SEQUENCE local_ega_download.errors_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE local_ega_download.errors_id_seq OWNER TO postgres;

--
-- Name: errors_id_seq; Type: SEQUENCE OWNED BY; Schema: local_ega_download; Owner: postgres
--

ALTER SEQUENCE local_ega_download.errors_id_seq OWNED BY local_ega_download.errors.id;


--
-- Name: requests; Type: TABLE; Schema: local_ega_download; Owner: postgres
--

CREATE TABLE local_ega_download.requests (
    id integer NOT NULL,
    file_id integer NOT NULL,
    start_coordinate bigint DEFAULT 0,
    end_coordinate bigint,
    user_info text,
    client_ip text,
    created_at timestamp with time zone DEFAULT clock_timestamp() NOT NULL
);


ALTER TABLE local_ega_download.requests OWNER TO postgres;

--
-- Name: requests_id_seq; Type: SEQUENCE; Schema: local_ega_download; Owner: postgres
--

CREATE SEQUENCE local_ega_download.requests_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE local_ega_download.requests_id_seq OWNER TO postgres;

--
-- Name: requests_id_seq; Type: SEQUENCE OWNED BY; Schema: local_ega_download; Owner: postgres
--

ALTER SEQUENCE local_ega_download.requests_id_seq OWNED BY local_ega_download.requests.id;


--
-- Name: success; Type: TABLE; Schema: local_ega_download; Owner: postgres
--

CREATE TABLE local_ega_download.success (
    id integer NOT NULL,
    req_id integer NOT NULL,
    bytes bigint DEFAULT 0,
    speed double precision DEFAULT 0.0,
    occured_at timestamp with time zone DEFAULT clock_timestamp() NOT NULL
);


ALTER TABLE local_ega_download.success OWNER TO postgres;

--
-- Name: success_id_seq; Type: SEQUENCE; Schema: local_ega_download; Owner: postgres
--

CREATE SEQUENCE local_ega_download.success_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE local_ega_download.success_id_seq OWNER TO postgres;

--
-- Name: success_id_seq; Type: SEQUENCE OWNED BY; Schema: local_ega_download; Owner: postgres
--

ALTER SEQUENCE local_ega_download.success_id_seq OWNED BY local_ega_download.success.id;


--
-- Name: file; Type: VIEW; Schema: local_ega_ebi; Owner: postgres
--

CREATE VIEW local_ega_ebi.file AS
 SELECT main.stable_id AS file_id,
    main.archive_file_reference AS file_name,
    main.archive_file_reference AS file_path,
    reverse(split_part(reverse(main.submission_file_path), '/'::text, 1)) AS display_file_name,
    main.archive_file_size AS file_size,
    NULL::text AS checksum,
    NULL::text AS checksum_type,
    main.archive_file_checksum AS unencrypted_checksum,
    main.archive_file_checksum_type AS unencrypted_checksum_type,
    main.status AS file_status,
    main.header
   FROM local_ega.main
  WHERE ((main.status)::text = 'READY'::text);


ALTER TABLE local_ega_ebi.file OWNER TO postgres;

--
-- Name: filedataset; Type: TABLE; Schema: local_ega_ebi; Owner: postgres
--

CREATE TABLE local_ega_ebi.filedataset (
    id integer NOT NULL,
    file_id integer NOT NULL,
    dataset_stable_id text NOT NULL
);


ALTER TABLE local_ega_ebi.filedataset OWNER TO postgres;

--
-- Name: file_dataset; Type: VIEW; Schema: local_ega_ebi; Owner: postgres
--

CREATE VIEW local_ega_ebi.file_dataset AS
 SELECT m.stable_id AS file_id,
    fd.dataset_stable_id AS dataset_id
   FROM (local_ega_ebi.filedataset fd
     JOIN local_ega.main m ON ((fd.file_id = m.id)));


ALTER TABLE local_ega_ebi.file_dataset OWNER TO postgres;

--
-- Name: fileindexfile; Type: TABLE; Schema: local_ega_ebi; Owner: postgres
--

CREATE TABLE local_ega_ebi.fileindexfile (
    id integer NOT NULL,
    file_id integer NOT NULL,
    index_file_id text,
    index_file_reference text NOT NULL,
    index_file_type local_ega.storage
);


ALTER TABLE local_ega_ebi.fileindexfile OWNER TO postgres;

--
-- Name: file_index_file; Type: VIEW; Schema: local_ega_ebi; Owner: postgres
--

CREATE VIEW local_ega_ebi.file_index_file AS
 SELECT m.stable_id AS file_id,
    fif.index_file_id
   FROM (local_ega_ebi.fileindexfile fif
     JOIN local_ega.main m ON ((fif.file_id = m.id)));


ALTER TABLE local_ega_ebi.file_index_file OWNER TO postgres;

--
-- Name: filedataset_id_seq; Type: SEQUENCE; Schema: local_ega_ebi; Owner: postgres
--

CREATE SEQUENCE local_ega_ebi.filedataset_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE local_ega_ebi.filedataset_id_seq OWNER TO postgres;

--
-- Name: filedataset_id_seq; Type: SEQUENCE OWNED BY; Schema: local_ega_ebi; Owner: postgres
--

ALTER SEQUENCE local_ega_ebi.filedataset_id_seq OWNED BY local_ega_ebi.filedataset.id;


--
-- Name: fileindexfile_id_seq; Type: SEQUENCE; Schema: local_ega_ebi; Owner: postgres
--

CREATE SEQUENCE local_ega_ebi.fileindexfile_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE local_ega_ebi.fileindexfile_id_seq OWNER TO postgres;

--
-- Name: fileindexfile_id_seq; Type: SEQUENCE OWNED BY; Schema: local_ega_ebi; Owner: postgres
--

ALTER SEQUENCE local_ega_ebi.fileindexfile_id_seq OWNED BY local_ega_ebi.fileindexfile.id;


--
-- Name: main id; Type: DEFAULT; Schema: local_ega; Owner: postgres
--

ALTER TABLE ONLY local_ega.main ALTER COLUMN id SET DEFAULT nextval('local_ega.main_id_seq'::regclass);


--
-- Name: main_errors id; Type: DEFAULT; Schema: local_ega; Owner: postgres
--

ALTER TABLE ONLY local_ega.main_errors ALTER COLUMN id SET DEFAULT nextval('local_ega.main_errors_id_seq'::regclass);


--
-- Name: errors id; Type: DEFAULT; Schema: local_ega_download; Owner: postgres
--

ALTER TABLE ONLY local_ega_download.errors ALTER COLUMN id SET DEFAULT nextval('local_ega_download.errors_id_seq'::regclass);


--
-- Name: requests id; Type: DEFAULT; Schema: local_ega_download; Owner: postgres
--

ALTER TABLE ONLY local_ega_download.requests ALTER COLUMN id SET DEFAULT nextval('local_ega_download.requests_id_seq'::regclass);


--
-- Name: success id; Type: DEFAULT; Schema: local_ega_download; Owner: postgres
--

ALTER TABLE ONLY local_ega_download.success ALTER COLUMN id SET DEFAULT nextval('local_ega_download.success_id_seq'::regclass);


--
-- Name: filedataset id; Type: DEFAULT; Schema: local_ega_ebi; Owner: postgres
--

ALTER TABLE ONLY local_ega_ebi.filedataset ALTER COLUMN id SET DEFAULT nextval('local_ega_ebi.filedataset_id_seq'::regclass);


--
-- Name: fileindexfile id; Type: DEFAULT; Schema: local_ega_ebi; Owner: postgres
--

ALTER TABLE ONLY local_ega_ebi.fileindexfile ALTER COLUMN id SET DEFAULT nextval('local_ega_ebi.fileindexfile_id_seq'::regclass);


--
-- Data for Name: archive_encryption; Type: TABLE DATA; Schema: local_ega; Owner: postgres
--

COPY local_ega.archive_encryption (mode, description) FROM stdin;
CRYPT4GH	Crypt4GH encryption (using version)
PGP	OpenPGP encryption (RFC 4880)
AES	AES encryption with passphrase
CUSTOM1	Custom method 1 for local site
CUSTOM2	Custom method 2 for local site
\.


--
-- Data for Name: dbschema_version; Type: TABLE DATA; Schema: local_ega; Owner: postgres
--

COPY local_ega.dbschema_version (version, applied, description) FROM stdin;
0	2020-06-01 20:20:16.11616+00	Created with version
\.


--
-- Data for Name: main; Type: TABLE DATA; Schema: local_ega; Owner: postgres
--

COPY local_ega.main (id, stable_id, status, submission_file_path, submission_file_extension, submission_file_calculated_checksum, submission_file_calculated_checksum_type, submission_file_size, submission_user, archive_file_reference, archive_file_type, archive_file_size, archive_file_checksum, archive_file_checksum_type, encryption_method, version, header, created_by, last_modified_by, created_at, last_modified) FROM stdin;
1	\N	ERROR	/c155c05d-0e23-41f4-81ef-407b5ce1f20a.c4gh	c4gh	\N	\N	\N	dummy	\N	\N	\N	\N	\N	CRYPT4GH	\N	\N	lega_in	lega_in	2020-06-01 20:25:33.355373+00	2020-06-01 20:25:33.355374+00
7	\N	COMPLETED	/75317026-b315-4b72-9deb-05c5fb22c60c.c4gh	c4gh	fb1f458eee4253bbd99ce143ebd600c300ba464c8e0c480e84fc83dca97e9bc0	SHA256	\N	dummy	7	\N	2098048	f248d6dca32fa3d1aefd7b53df91a8b22dad3aeacb64537df948408647c9200f	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6e6a806f94ff05ff13cf9d6258caa260d301959b8202d4e06a73d36a43050e51f510769804494b8b68c094cd3d1b42e8d22cb93321da2f749db13d26eade641a60a051ce33	lega_in	lega_in	2020-06-01 20:34:10.513373+00	2020-06-01 20:34:10.513374+00
3	\N	ERROR	/c53bbd07-be4b-4d20-b441-ae49b6ccc79c.c4gh	c4gh	5d06ece4b2ae05e9fc62885b37c0f6eead2133fd85faf377ff309986f597ace7	SHA256	\N	dummy	3	\N	1049024000	da87281c9f9ab6cef8f9362935f4fc864db94606d52212614894f1253461a762	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6e80b27083ecd8fd036655b382bba8600bf899924615962d1d9b25d4869ebf85bbe8234c398faaa013e3131519b66f1bf914dda0369bb8b24fcb31eda3a2efbc17e15f89aa	lega_in	lega_in	2020-06-01 20:27:45.07239+00	2020-06-01 20:27:45.072391+00
4	\N	COMPLETED	/516f50ab-6d02-409f-b6b9-39ede4fd887d.c4gh	c4gh	bece2b6e9e1456322f8f6b58ff484e2b996450059297cd67362e85ced32b5901	SHA256	\N	dummy	4	\N	1049024	cea0685f8448c918b506592b19b73e119ca35fd4d5dc529906ebc8eea810ebd4	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6e18406c5fdfff14f3a45279281b04cc9200aba74cf03b5c0b54a0827a9b298b14146b42b39617e897300967115d698440aa50ad2c91a0cd85d3df891bf060c5d95079b16f	lega_in	lega_in	2020-06-01 20:33:27.659744+00	2020-06-01 20:33:27.659745+00
2	\N	COMPLETED	/558d3efe-8cd6-4ecf-b634-751da7259cee.c4gh	c4gh	813482f6a3646f8ea354d78b1de62f3d9944e79c1ec8f501d5bc8cf27297e7b4	SHA256	\N	dummy	2	\N	10490240	034348c10c0be73e6a14093d06ec55672851b876995eec850c7a8038a4e9296d	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6eb68c5295289656390fd9f52c64eb1d92042bbc82cabefbb5653980d883f280ac071e480822c5a44a7a656d1878c3a2132dfdd1f738e75553f48204300fefd19b43902245	lega_in	lega_in	2020-06-01 20:25:40.878697+00	2020-06-01 20:25:40.878698+00
8	EGAF001	READY	/e920335f-1359-476c-b98b-623177e25383.c4gh	c4gh	somechecksum	SHA256	\N	dummy	8	\N	10490240	0584b7cc3f1a088feb6a39b87e92c97d7c6aabe21cad139a629c05a7a05ef3ec	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6e5b64df1bc15969d7fa99ed8d3f8ee5fc33ad76c760d9ca8652834f34de678f9b210244f69892c33331d5e08a13234580802481241b79b0292b12b7b4381a5cc57e0f2f1b	lega_in	lega_in	2020-06-01 20:34:17.028906+00	2020-06-01 20:34:17.028907+00
6	\N	COMPLETED	/75317026-b315-4b72-9deb-05c5fb22c60c.c4gh	c4gh	b9e9ba0e0bfcf986024f60d28c209fe0a08e673eef8abc6b4d2b6c6bf5a6df97	SHA256	\N	dummy	6	\N	1049024	504b7188c4450868e8eeb79640bd5a338dc6dc0a7fb27834019277566a6c905a	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6e1c316ad8e7fa53234d63463ea20fe51819a9a659e58e068e8f4106fdfaa0d938732f602287df73f3564970d3b733ffb8763584091921a7c30f9bf8b62b2e7a197801915d	lega_in	lega_in	2020-06-01 20:34:06.59855+00	2020-06-01 20:34:06.598551+00
5	\N	ERROR	/516f50ab-6d02-409f-b6b9-39ede4fd887d.c4gh.2	2	bece2b6e9e1456322f8f6b58ff484e2b996450059297cd67362e85ced32b5901	SHA256	\N	dummy	5	\N	1049024	\N	\N	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6e18406c5fdfff14f3a45279281b04cc9200aba74cf03b5c0b54a0827a9b298b14146b42b39617e897300967115d698440aa50ad2c91a0cd85d3df891bf060c5d95079b16f	lega_in	lega_in	2020-06-01 20:34:02.263736+00	2020-06-01 20:34:02.263737+00
11	\N	ERROR	/8e6dae3e-0a29-4060-ab9a-79ae079b2f32.c4gh	c4gh	2bc262443660755c99e8eceb6251fa2043c9e6c13ddaa871a9601ebe1677eaf3	SHA256	\N	dummy	11	\N	1049024	\N	\N	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6ea82ac9919a39115733bf08fc7dc5951c3311c69ab709d364e4817466f4ca9bee4b20acae4c81ca063635ec47e66dfbf7a54e6ec538702ecc525ea2c9ad11af821c33153f	lega_in	lega_in	2020-06-01 20:34:43.147689+00	2020-06-01 20:34:43.14769+00
10	\N	COMPLETED	/dir1/dir2/dir3/08ba4d6f-340d-4de1-946f-66fab88513c5.c4gh	c4gh	ca90d7f3cbadaf554fa0cd4aa540c73e14efbc960c29ab83ad28439f88c12da7	SHA256	\N	dummy	10	\N	1049024	70f9eb017dabfbb9347ce50e6e96379e4e724e72c9708a5765118f98ea1311df	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6e9a7cb81f557b31863df1c0de86ad1a38c53581857f00b1f3d57e62dd907981c2c746ef803ce4fc2ffc7a25b0fa4c6ce7157e52dfc1c129575b1f3dbd6751f93c13fcfe95	lega_in	lega_in	2020-06-01 20:34:37.557789+00	2020-06-01 20:34:37.55779+00
9	\N	ERROR	/1aecde78-c374-4cc4-a2ad-99c4ab94a5b1.c4gh	c4gh	\N	\N	\N	dummy	\N	\N	\N	\N	\N	CRYPT4GH	\N	\N	lega_in	lega_in	2020-06-01 20:34:32.566818+00	2020-06-01 20:34:32.566819+00
12	\N	COMPLETED	/8b6bd69d-1336-4bbb-b11a-cc3ded5de4be.c4gh	c4gh	4472fac618b3a73ab977117c0b6d415dc7650f7cd4eff7d0bbdf3aef2d13a2d0	SHA256	\N	dummy	12	\N	1049024	30e14955ebf1352266dc2ff8067e68104607e750abb9d3b36582b8af909fcb58	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6ed6ac31c50ab8aeb202e1da3e706def898f212b506778d3be39ea056bd7fc490cb4e20fb635e6a0ab81b27eb2099ff6bedf7ea21f3426188bde35659139b9e18aab293c3c	lega_in	lega_in	2020-06-02 04:37:55.087371+00	2020-06-02 04:37:55.087372+00
45	\N	COMPLETED	/82119fcb-37af-4f1e-ab28-61cff34c550d.c4gh	c4gh	959ec3dab6c2236b13b5a449959cc83c58311a24cebd2ccd7c23eac568bbb722	SHA256	\N	dummy	45	\N	1049024	30e14955ebf1352266dc2ff8067e68104607e750abb9d3b36582b8af909fcb58	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6ecb289ba402a745352613599fb7da6e1dfa1982dd127840328734e793865415e455bc91c9a1db8c2e5e151618643ca0b68e65f57fefbcc238b79d7dea66e89c0cea4465a4	lega_in	lega_in	2020-06-02 04:38:18.68897+00	2020-06-02 04:38:18.688971+00
79	\N	COMPLETED	/4597945a-4d8a-4804-9c81-5f34f1e7e09a.c4gh	c4gh	341b3ec593b68a02405151c069791499ab1233fbcac90b6d263fbdd0b303a49e	SHA256	\N	dummy	79	\N	1049024	7f2334c2ecc4c5e4c92bfe67a7f51d1a03388a3ca23d64972fddb8c4a46bb591	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6e3f1ce4d248eef08f48d5802a5c8ab39c0f6b37fd824e3d4820afdc5d886c422948d0f1a50101c83a7c7eac9f8d3d5e5f74ca9242ef90aa0e487921d08ed9352640c0be8b	lega_in	lega_in	2020-06-02 04:41:10.798984+00	2020-06-02 04:41:10.798985+00
46	\N	COMPLETED	/7b353a1a-7cc0-4b81-b6e6-589ce70fb190.c4gh	c4gh	a839566288bf29c71b0982b492863ad336240a1a9a8abaa45c1c811db31bad54	SHA256	\N	dummy	46	\N	1049024	30e14955ebf1352266dc2ff8067e68104607e750abb9d3b36582b8af909fcb58	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6ed72165b8f6a973485607b3cb3c4c89fc49d06624c64988fb95b628b25ad26b6ab3e57ce69b822c2841bda11c3fa4c57d5b5faf6ccb2ad7b1c781e7a46fc1ccb205d9bf09	lega_in	lega_in	2020-06-02 04:38:31.114715+00	2020-06-02 04:38:31.114716+00
111	\N	COMPLETED	/a83d70b1-6116-4eab-a207-da34f041e2e7.c4gh	c4gh	d2de657bd11546252474a9ccb44c89a4ca767e677050a3509fcd3370b57a550c	SHA256	\N	dummy	111	\N	10490240	007257377979d362ae96ff4a47b4fb013f3a7899ecab9130a9790fae24962bd4	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6ee249f7b2bd253551f6733683c3119e51afa13739a52d70c430ec0daaf7dbba3e4f61005164e5e4dcd832a59fe6d2aea70c0202e5801bdeefae6efeb97cfa0d6071387f02	lega_in	lega_in	2020-06-02 04:43:28.826132+00	2020-06-02 04:43:28.826133+00
78	\N	COMPLETED	/a6abb8c3-2529-4961-b033-d289ad3b8366.c4gh	c4gh	f3b1c0889b895afc0d9828cacf8ccc4970a1201a575543017b6f2ebb855bfe17	SHA256	\N	dummy	78	\N	1049024	92139349f84089dec432c003417a9c78cd79da1dbf800cfd7b2930799c0639fe	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6e15580800a2bbe44227c267c5f5f8d3c60aa7c27b0d00f228d9b4a8022c3ef108c704405739cf735083e34c36e1815b10d51e894d3f0822ad1507f9e5f386906a6a9ae4c5	lega_in	lega_in	2020-06-02 04:40:09.778274+00	2020-06-02 04:40:09.778275+00
80	\N	COMPLETED	/41b52014-15b5-4e43-8608-39f00e6d0150.c4gh	c4gh	b765c9d27fc53e29e6173a19c28cc499ddcd9151ee6b0c8798797ca96f24bb7c	SHA256	\N	dummy	80	\N	10490240	a5ad327e4e8bab4860dbf49d66e6185197b4d93d31a26460f1b8a92a67810c99	SHA256	CRYPT4GH	\N	637279707434676801000000010000006c00000000000000cf7660c092becbbb6fee6d2a721f6dd61b090d20d23820b239b0254e80839c6eee032f175cbf73413ba4bbe21b0c73067e6e11df97080c700bbf8ccd67e87c484f3aa8e62f318992aff0a8b5946752523f42de4ca3cb6268c6258c54f373d5cc427a06e2	lega_in	lega_in	2020-06-02 04:41:21.069447+00	2020-06-02 04:41:21.069448+00
\.


--
-- Data for Name: main_errors; Type: TABLE DATA; Schema: local_ega; Owner: postgres
--

COPY local_ega.main_errors (id, active, file_id, hostname, error_type, msg, from_user, occured_at) FROM stdin;
1	t	1	ingest	NotFoundInInbox	Inbox missing file: /c155c05d-0e23-41f4-81ef-407b5ce1f20a.c4gh	t	2020-06-01 20:25:33.374944+00
2	t	3	verify	SessionKeyAlreadyUsedError	Session key (likely) already used [checksum: ['41622cee9692bdb5201dcd72245d2c9b981ea5af751c26e713e6cb5a4471f479']].	t	2020-06-01 20:33:53.679333+00
3	t	5	verify	SessionKeyAlreadyUsedError	Session key (likely) already used [checksum: ['171fea7c482916e70a296a3123d44b60ef27a204cd2b8c44c8b6c0c08c725652']].	t	2020-06-01 20:34:02.388953+00
4	t	9	ingest	ValueError	ValueError('Not a CRYPT4GH formatted file',)	t	2020-06-01 20:34:32.593176+00
5	t	11	verify	ValueError	ValueError('No supported encryption method',)	t	2020-06-01 20:34:43.263671+00
\.


--
-- Data for Name: session_key_checksums_sha256; Type: TABLE DATA; Schema: local_ega; Owner: postgres
--

COPY local_ega.session_key_checksums_sha256 (session_key_checksum, session_key_checksum_type, file_id) FROM stdin;
c9440047de4e1a02871b5258714c96f2ba29e8806606c1bb848a733397b08f2b	\N	2
41622cee9692bdb5201dcd72245d2c9b981ea5af751c26e713e6cb5a4471f479	\N	3
171fea7c482916e70a296a3123d44b60ef27a204cd2b8c44c8b6c0c08c725652	\N	4
bfac3465f32e90ba78dde2fc649a2159b85b2118633b6b1d9f1b37e55c1c80c5	\N	6
70bce1be68845daab30888c411fe0aee0019a79b2ebb48419ede73d90644ae2f	\N	7
32b80c50b3e99f9f89b97113479660e05f78c76ab91ce79effd048a1418c1d07	\N	8
56467e7a054906787debab9c59cad5dabdac9d5b3951110e8158bb2b4b5423d1	\N	10
ce7c88a5e953418ca7f40f80acb1d2cbd388de08b17145d075bb037dd0ec0a3e	\N	12
36041820b4cb405f9066a064860e75c017e5f3b4c7a386b9f9750db7520215b9	\N	45
2797af2a9f0e8043a44aa19072a2f09a303d2d32e7ee72faecee1c33268e0dca	\N	46
7e0a65ebbd97688b66615ad5621e0d5a40716f8f32767c118bc025fc02c82de7	\N	78
bee51094538a18341cee40739c126115fc72f985a66fddedd19c4685acd1d68e	\N	79
38f4a671428e4c29453857f176f1cba6082727a8a8e883085fa10d17653a40b0	\N	80
7939e739fa039e294f9edb6f147605e454b9f372a7b20fab5f7d6e613c90d71a	\N	111
\.


--
-- Data for Name: status; Type: TABLE DATA; Schema: local_ega; Owner: postgres
--

COPY local_ega.status (id, code, description) FROM stdin;
10	INIT	Initializing a file ingestion
20	IN_INGESTION	Currently under ingestion
30	ARCHIVED	File moved to Archive
40	COMPLETED	File verified in Archive
50	READY	File ingested, ready for download
0	ERROR	An Error occured, check the error table
1	DISABLED	Used for submissions that are stopped, overwritten, or to be cleaned up
\.


--
-- Data for Name: errors; Type: TABLE DATA; Schema: local_ega_download; Owner: postgres
--

COPY local_ega_download.errors (id, req_id, code, description, hostname, occured_at) FROM stdin;
\.


--
-- Data for Name: requests; Type: TABLE DATA; Schema: local_ega_download; Owner: postgres
--

COPY local_ega_download.requests (id, file_id, start_coordinate, end_coordinate, user_info, client_ip, created_at) FROM stdin;
\.


--
-- Data for Name: success; Type: TABLE DATA; Schema: local_ega_download; Owner: postgres
--

COPY local_ega_download.success (id, req_id, bytes, speed, occured_at) FROM stdin;
\.


--
-- Data for Name: filedataset; Type: TABLE DATA; Schema: local_ega_ebi; Owner: postgres
--

COPY local_ega_ebi.filedataset (id, file_id, dataset_stable_id) FROM stdin;
\.


--
-- Data for Name: fileindexfile; Type: TABLE DATA; Schema: local_ega_ebi; Owner: postgres
--

COPY local_ega_ebi.fileindexfile (id, file_id, index_file_id, index_file_reference, index_file_type) FROM stdin;
\.


--
-- Name: main_errors_id_seq; Type: SEQUENCE SET; Schema: local_ega; Owner: postgres
--

SELECT pg_catalog.setval('local_ega.main_errors_id_seq', 5, true);


--
-- Name: main_id_seq; Type: SEQUENCE SET; Schema: local_ega; Owner: postgres
--

SELECT pg_catalog.setval('local_ega.main_id_seq', 111, true);


--
-- Name: errors_id_seq; Type: SEQUENCE SET; Schema: local_ega_download; Owner: postgres
--

SELECT pg_catalog.setval('local_ega_download.errors_id_seq', 1, false);


--
-- Name: requests_id_seq; Type: SEQUENCE SET; Schema: local_ega_download; Owner: postgres
--

SELECT pg_catalog.setval('local_ega_download.requests_id_seq', 1, false);


--
-- Name: success_id_seq; Type: SEQUENCE SET; Schema: local_ega_download; Owner: postgres
--

SELECT pg_catalog.setval('local_ega_download.success_id_seq', 1, false);


--
-- Name: filedataset_id_seq; Type: SEQUENCE SET; Schema: local_ega_ebi; Owner: postgres
--

SELECT pg_catalog.setval('local_ega_ebi.filedataset_id_seq', 1, false);


--
-- Name: fileindexfile_id_seq; Type: SEQUENCE SET; Schema: local_ega_ebi; Owner: postgres
--

SELECT pg_catalog.setval('local_ega_ebi.fileindexfile_id_seq', 1, false);


--
-- Name: archive_encryption archive_encryption_pkey; Type: CONSTRAINT; Schema: local_ega; Owner: postgres
--

ALTER TABLE ONLY local_ega.archive_encryption
    ADD CONSTRAINT archive_encryption_pkey PRIMARY KEY (mode);


--
-- Name: dbschema_version dbschema_version_pkey; Type: CONSTRAINT; Schema: local_ega; Owner: postgres
--

ALTER TABLE ONLY local_ega.dbschema_version
    ADD CONSTRAINT dbschema_version_pkey PRIMARY KEY (version);


--
-- Name: main_errors main_errors_pkey; Type: CONSTRAINT; Schema: local_ega; Owner: postgres
--

ALTER TABLE ONLY local_ega.main_errors
    ADD CONSTRAINT main_errors_pkey PRIMARY KEY (id);


--
-- Name: main main_pkey; Type: CONSTRAINT; Schema: local_ega; Owner: postgres
--

ALTER TABLE ONLY local_ega.main
    ADD CONSTRAINT main_pkey PRIMARY KEY (id);


--
-- Name: session_key_checksums_sha256 session_key_checksums_sha256_pkey; Type: CONSTRAINT; Schema: local_ega; Owner: postgres
--

ALTER TABLE ONLY local_ega.session_key_checksums_sha256
    ADD CONSTRAINT session_key_checksums_sha256_pkey PRIMARY KEY (session_key_checksum);


--
-- Name: status status_code_key; Type: CONSTRAINT; Schema: local_ega; Owner: postgres
--

ALTER TABLE ONLY local_ega.status
    ADD CONSTRAINT status_code_key UNIQUE (code);


--
-- Name: status status_pkey; Type: CONSTRAINT; Schema: local_ega; Owner: postgres
--

ALTER TABLE ONLY local_ega.status
    ADD CONSTRAINT status_pkey PRIMARY KEY (id);


--
-- Name: errors errors_pkey; Type: CONSTRAINT; Schema: local_ega_download; Owner: postgres
--

ALTER TABLE ONLY local_ega_download.errors
    ADD CONSTRAINT errors_pkey PRIMARY KEY (id);


--
-- Name: requests requests_pkey; Type: CONSTRAINT; Schema: local_ega_download; Owner: postgres
--

ALTER TABLE ONLY local_ega_download.requests
    ADD CONSTRAINT requests_pkey PRIMARY KEY (id);


--
-- Name: success success_pkey; Type: CONSTRAINT; Schema: local_ega_download; Owner: postgres
--

ALTER TABLE ONLY local_ega_download.success
    ADD CONSTRAINT success_pkey PRIMARY KEY (id);


--
-- Name: filedataset filedataset_pkey; Type: CONSTRAINT; Schema: local_ega_ebi; Owner: postgres
--

ALTER TABLE ONLY local_ega_ebi.filedataset
    ADD CONSTRAINT filedataset_pkey PRIMARY KEY (id);


--
-- Name: fileindexfile fileindexfile_pkey; Type: CONSTRAINT; Schema: local_ega_ebi; Owner: postgres
--

ALTER TABLE ONLY local_ega_ebi.fileindexfile
    ADD CONSTRAINT fileindexfile_pkey PRIMARY KEY (id);


--
-- Name: file_id_idx; Type: INDEX; Schema: local_ega; Owner: postgres
--

CREATE UNIQUE INDEX file_id_idx ON local_ega.main USING btree (id);


--
-- Name: main main_updated; Type: TRIGGER; Schema: local_ega; Owner: postgres
--

CREATE TRIGGER main_updated AFTER UPDATE ON local_ega.main FOR EACH ROW EXECUTE PROCEDURE local_ega.main_updated();


--
-- Name: main mark_ready; Type: TRIGGER; Schema: local_ega; Owner: postgres
--

CREATE TRIGGER mark_ready AFTER UPDATE OF status ON local_ega.main FOR EACH ROW WHEN (((new.status)::text = 'READY'::text)) EXECUTE PROCEDURE local_ega.mark_ready();


--
-- Name: main main_encryption_method_fkey; Type: FK CONSTRAINT; Schema: local_ega; Owner: postgres
--

ALTER TABLE ONLY local_ega.main
    ADD CONSTRAINT main_encryption_method_fkey FOREIGN KEY (encryption_method) REFERENCES local_ega.archive_encryption(mode);


--
-- Name: main_errors main_errors_file_id_fkey; Type: FK CONSTRAINT; Schema: local_ega; Owner: postgres
--

ALTER TABLE ONLY local_ega.main_errors
    ADD CONSTRAINT main_errors_file_id_fkey FOREIGN KEY (file_id) REFERENCES local_ega.main(id) ON DELETE CASCADE;


--
-- Name: main main_status_fkey; Type: FK CONSTRAINT; Schema: local_ega; Owner: postgres
--

ALTER TABLE ONLY local_ega.main
    ADD CONSTRAINT main_status_fkey FOREIGN KEY (status) REFERENCES local_ega.status(code);


--
-- Name: session_key_checksums_sha256 session_key_checksums_sha256_file_id_fkey; Type: FK CONSTRAINT; Schema: local_ega; Owner: postgres
--

ALTER TABLE ONLY local_ega.session_key_checksums_sha256
    ADD CONSTRAINT session_key_checksums_sha256_file_id_fkey FOREIGN KEY (file_id) REFERENCES local_ega.main(id) ON DELETE CASCADE;


--
-- Name: errors errors_req_id_fkey; Type: FK CONSTRAINT; Schema: local_ega_download; Owner: postgres
--

ALTER TABLE ONLY local_ega_download.errors
    ADD CONSTRAINT errors_req_id_fkey FOREIGN KEY (req_id) REFERENCES local_ega_download.requests(id);


--
-- Name: requests requests_file_id_fkey; Type: FK CONSTRAINT; Schema: local_ega_download; Owner: postgres
--

ALTER TABLE ONLY local_ega_download.requests
    ADD CONSTRAINT requests_file_id_fkey FOREIGN KEY (file_id) REFERENCES local_ega.main(id);


--
-- Name: success success_req_id_fkey; Type: FK CONSTRAINT; Schema: local_ega_download; Owner: postgres
--

ALTER TABLE ONLY local_ega_download.success
    ADD CONSTRAINT success_req_id_fkey FOREIGN KEY (req_id) REFERENCES local_ega_download.requests(id);


--
-- Name: filedataset filedataset_file_id_fkey; Type: FK CONSTRAINT; Schema: local_ega_ebi; Owner: postgres
--

ALTER TABLE ONLY local_ega_ebi.filedataset
    ADD CONSTRAINT filedataset_file_id_fkey FOREIGN KEY (file_id) REFERENCES local_ega.main(id) ON DELETE CASCADE;


--
-- Name: fileindexfile fileindexfile_file_id_fkey; Type: FK CONSTRAINT; Schema: local_ega_ebi; Owner: postgres
--

ALTER TABLE ONLY local_ega_ebi.fileindexfile
    ADD CONSTRAINT fileindexfile_file_id_fkey FOREIGN KEY (file_id) REFERENCES local_ega.main(id) ON DELETE CASCADE;


--
-- Name: SCHEMA local_ega; Type: ACL; Schema: -; Owner: postgres
--

GRANT USAGE ON SCHEMA local_ega TO lega_in;
GRANT USAGE ON SCHEMA local_ega TO lega_out;


--
-- Name: SCHEMA local_ega_download; Type: ACL; Schema: -; Owner: postgres
--

GRANT USAGE ON SCHEMA local_ega_download TO lega_out;


--
-- Name: SCHEMA local_ega_ebi; Type: ACL; Schema: -; Owner: postgres
--

GRANT USAGE ON SCHEMA local_ega_ebi TO lega_out;


--
-- Name: TABLE archive_encryption; Type: ACL; Schema: local_ega; Owner: postgres
--

GRANT ALL ON TABLE local_ega.archive_encryption TO lega_in;


--
-- Name: TABLE main; Type: ACL; Schema: local_ega; Owner: postgres
--

GRANT ALL ON TABLE local_ega.main TO lega_in;


--
-- Name: TABLE archive_files; Type: ACL; Schema: local_ega; Owner: postgres
--

GRANT ALL ON TABLE local_ega.archive_files TO lega_in;
GRANT SELECT ON TABLE local_ega.archive_files TO lega_out;


--
-- Name: TABLE dbschema_version; Type: ACL; Schema: local_ega; Owner: postgres
--

GRANT ALL ON TABLE local_ega.dbschema_version TO lega_in;


--
-- Name: TABLE main_errors; Type: ACL; Schema: local_ega; Owner: postgres
--

GRANT ALL ON TABLE local_ega.main_errors TO lega_in;


--
-- Name: TABLE errors; Type: ACL; Schema: local_ega; Owner: postgres
--

GRANT ALL ON TABLE local_ega.errors TO lega_in;


--
-- Name: TABLE files; Type: ACL; Schema: local_ega; Owner: postgres
--

GRANT ALL ON TABLE local_ega.files TO lega_in;


--
-- Name: SEQUENCE main_errors_id_seq; Type: ACL; Schema: local_ega; Owner: postgres
--

GRANT ALL ON SEQUENCE local_ega.main_errors_id_seq TO lega_in;


--
-- Name: SEQUENCE main_id_seq; Type: ACL; Schema: local_ega; Owner: postgres
--

GRANT ALL ON SEQUENCE local_ega.main_id_seq TO lega_in;


--
-- Name: TABLE session_key_checksums_sha256; Type: ACL; Schema: local_ega; Owner: postgres
--

GRANT ALL ON TABLE local_ega.session_key_checksums_sha256 TO lega_in;


--
-- Name: TABLE status; Type: ACL; Schema: local_ega; Owner: postgres
--

GRANT ALL ON TABLE local_ega.status TO lega_in;


--
-- Name: TABLE errors; Type: ACL; Schema: local_ega_download; Owner: postgres
--

GRANT ALL ON TABLE local_ega_download.errors TO lega_out;


--
-- Name: SEQUENCE errors_id_seq; Type: ACL; Schema: local_ega_download; Owner: postgres
--

GRANT ALL ON SEQUENCE local_ega_download.errors_id_seq TO lega_out;


--
-- Name: TABLE requests; Type: ACL; Schema: local_ega_download; Owner: postgres
--

GRANT ALL ON TABLE local_ega_download.requests TO lega_out;


--
-- Name: SEQUENCE requests_id_seq; Type: ACL; Schema: local_ega_download; Owner: postgres
--

GRANT ALL ON SEQUENCE local_ega_download.requests_id_seq TO lega_out;


--
-- Name: TABLE success; Type: ACL; Schema: local_ega_download; Owner: postgres
--

GRANT ALL ON TABLE local_ega_download.success TO lega_out;


--
-- Name: SEQUENCE success_id_seq; Type: ACL; Schema: local_ega_download; Owner: postgres
--

GRANT ALL ON SEQUENCE local_ega_download.success_id_seq TO lega_out;


--
-- Name: TABLE file; Type: ACL; Schema: local_ega_ebi; Owner: postgres
--

GRANT ALL ON TABLE local_ega_ebi.file TO lega_out;


--
-- Name: TABLE filedataset; Type: ACL; Schema: local_ega_ebi; Owner: postgres
--

GRANT ALL ON TABLE local_ega_ebi.filedataset TO lega_out;


--
-- Name: TABLE file_dataset; Type: ACL; Schema: local_ega_ebi; Owner: postgres
--

GRANT ALL ON TABLE local_ega_ebi.file_dataset TO lega_out;


--
-- Name: TABLE fileindexfile; Type: ACL; Schema: local_ega_ebi; Owner: postgres
--

GRANT ALL ON TABLE local_ega_ebi.fileindexfile TO lega_out;


--
-- Name: TABLE file_index_file; Type: ACL; Schema: local_ega_ebi; Owner: postgres
--

GRANT ALL ON TABLE local_ega_ebi.file_index_file TO lega_out;


--
-- Name: SEQUENCE filedataset_id_seq; Type: ACL; Schema: local_ega_ebi; Owner: postgres
--

GRANT ALL ON SEQUENCE local_ega_ebi.filedataset_id_seq TO lega_out;


--
-- Name: SEQUENCE fileindexfile_id_seq; Type: ACL; Schema: local_ega_ebi; Owner: postgres
--

GRANT ALL ON SEQUENCE local_ega_ebi.fileindexfile_id_seq TO lega_out;


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

-- Dumped from database version 11.2
-- Dumped by pg_dump version 11.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

DROP DATABASE postgres;
--
-- Name: postgres; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE postgres WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'en_US.utf8' LC_CTYPE = 'en_US.utf8';


ALTER DATABASE postgres OWNER TO postgres;

\connect postgres

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: DATABASE postgres; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE postgres IS 'default administrative connection database';


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database cluster dump complete
--

